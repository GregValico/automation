name: Bootstrap GKE cluster

on:
  workflow_dispatch:
    inputs:
      project_name:
        description: 'Name of the GCP Project'
        required: true
      cluster_name:
        description: 'Name of GKE cluster'
        required: true
      subnet_name:
        description: 'Node subnet name'
        required: true
      region:
        description: 'Region of the GKE cluster'
        required: true
        type: choice
        options:
          - us-east4

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: 'latest'

      # - name: Install gcloud beta components
      #   run: |
      #     sudo apt-get update && sudo apt-get install -y apt-transport-https ca-certificates gnupg
      #     echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
      #     sudo apt-get install -y google-cloud-sdk
      #     gcloud components install beta --quiet

      - name: Configure gcloud
        run: |
          gcloud config set project ${{ inputs.project_name }}

      - name: Install Istio Ingress Gateway 
        run: |
          gcloud config set project ${{ inputs.project_name }}
          gcloud compute ssh --zone "${{ inputs.region }}-a" "gke-jump-${{ inputs.cluster_name }}" --project "${{ inputs.project_name }}" --command '

            
            sleep 20
            curl -L https://istio.io/downloadIstio | ISTIO_VERSION=1.14.1 sh -
            cd istio-1.14.1
            export PATH=$PWD/bin:$PATH
            
            gcloud container clusters get-credentials ${{ inputs.cluster_name }} --region ${{ inputs.region }} --project ${{ inputs.project_name }}
            
            kubectl create ns istio-system

            istioctl install --set profile=default --set components.ingressGateways[0].enabled=true --set components.egressGateways[0].enabled=false --set components.cni.enabled=false --set components.pilot.enabled=true -y

            kubectl get crds | grep 'istio.io'
            kubectl get pods -n istio-system

            cat <<EOF > kubectl apply -f -
            apiVersion: v1
            kind: Service
            metadata:
              name: istio-ingressgateway
              namespace: istio-system
            spec:
              type: LoadBalancer
          EOF
            cat <<EOF > kubectl apply -f -
            apiVersion: networking.istio.io/v1alpha3
            kind: Gateway
            metadata:
              name: my-gateway
              namespace: istio-system
            spec:
              selector:
                istio: ingressgateway # Use Istio default gateway implementation
              servers:
              - port:
                  number: 80
                  name: http
                  protocol: HTTP
                hosts:
                - "*"
          EOF
            
            echo "Waiting for the LoadBalancer IP..."
            sleep 150

            kubectl get svc istio-ingressgateway -n istio-system -o jsonpath='{.status.loadBalancer.ingress[0].ip}' > /tmp/istio_lb.txt
          '
          ISTIO_LB_IP=$(gcloud compute ssh --zone "${{ inputs.region }}-a" "gke-jump-${{ inputs.cluster_name }}" --project "${{ inputs.project_name }}" --command "cat /tmp/istio_lb.txt")
          echo "ISTIO_LB_IP=$ISTIO_LB_IP" >> $GITHUB_ENV

          echo $ISTIO_LB_IP
